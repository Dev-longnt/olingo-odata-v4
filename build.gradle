plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

bootJar.enabled = false

// Define project dependencies
dependencies {
    // Client module depends on server module if needed, or vice-versa
    // For now, they are independent. If client needs server classes, add:
    // implementation project(':server')
}

// Configure subprojects
subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    // Common test dependencies if any
    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation 'org.mockito:mockito-core:5.12.0'
    }

    tasks.named('test') {
        useJUnitPlatform()
        testLogging {
            showStandardStreams = true
        }
    }
}

// Specific dependency for client on server if needed
project(':client') {
    dependencies {
        // If client needs to use classes from server, uncomment this:
        // implementation project(':server')
    }
}

// Specific dependency for server on client if needed
project(':server') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        // If server needs to use classes from client, uncomment this:
        // implementation project(':client')
    }
}

tasks.named('build') {
    dependsOn subprojects.tasks.build
}
